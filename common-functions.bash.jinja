log_debug() {
	(>&2 printf '%sDEBUG%s: %s\n' "$(tput setaf 7)" "$(tput sgr0)" "$@")
}

log_info() {
	(>&2 printf '%sINFO%s: %s\n' "$(tput setaf 2)" "$(tput sgr0)" "$@")
}

log_warn() {
	(>&2 printf '%sWARNING%s: %s\n' "$(tput setaf 3)" "$(tput sgr0)" "$@")
}

log_error() {
	(>&2 printf '%sERROR%s: %s\n' "$(tput setaf 1)" "$(tput sgr0)" "$@")
}

get_context() {
	local line
	local subroutine
	local filename
	line="$1"
	subroutine='call'
	if [ "$#" -eq "2" ]; then
		filename="$2"
	elif [ "$#" -eq "3" ]; then
		subroutine="$2"
		filename="$3"
	else
		log_error 'incorrect number of arguments!'
		exit 1
	fi
	printf '%s%s on line %d of %s:%s\n' "$(tput setaf 1)" "$subroutine" "$line" "$filename" "$(tput sgr0)"
	awk 'NR>L-4 && NR<L+4 { printf "%-5d%3s%s\n",NR,(NR==L?">>>":""),$0 }' L="$line" "$filename"
}

log_stack_trace() {
	local last_exit=$?
	local max_depth
	local depth
	if [ "$last_exit" -ne "0" ]; then
		depth=0
		max_depth="${1:-3}"
		while [ "$depth" -le "$max_depth" ] && caller "$depth" 1>/dev/null 2>&1 ; do
			log_error "$(get_context $(caller "$depth"))"
			depth+=1
		done
		log_error "$(printf '%s(%d) -> exit %d\n' $(caller 0 | awk '{ print $3,$1 }') "$last_exit")"
	fi
}

append_trap () {
	local trap_cmd
	local trap_sig
	local old_trap_cmd

	trap_cmd="$1"
	trap_sig="$2"

	old_trap_cmd="$(trap -p "$trap_sig" | sed -E -e "s/^[^'\"]*['\"]//" -e "s/['\"][[:space:]]*${trap_sig}\$//")"
	if [[ -n "$old_trap_cmd" ]]; then
		trap_cmd="$old_trap_cmd; $trap_cmd"
	fi
	trap "$trap_cmd" "$trap_sig"
}

trap 'log_stack_trace' EXIT

get_script_dir() {
	## resolve the directory of the given script
	# example:
	# 	get_script_dir "${BASH_SOURCE[0]}"
	SOURCE="${1}"
	#SOURCE="${BASH_SOURCE[0]}"
	while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
		SCRIPTDIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
		SOURCE="$(readlink "$SOURCE")"
		[[ $SOURCE != /* ]] && SOURCE="$SCRIPTDIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
	done
	SCRIPTDIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
	printf '%s\n' "${SCRIPTDIR}"
}

contains_value() {
	local value
	value="$1"
	shift
	for arg in "$@"; do
		if [ "$value" == "$arg" ]; then
			return 0
		fi
	done
	return 1
}
