---
_envops:
  trim_blocks: true
  lstrip_blocks: true

project_name:
  type: str
  default: My Project

project_slug:
  type: str
  default: "{{ project_name|lower|regex_replace('[^a-z0-9_.-]', '-') }}"

short_description:
  type: str
  default: "CLI utility for "

description:
  type: str
  default: '{{ project_slug }} is a {{ short_description }}'

file_name:
  type: str
  default: '{{ project_slug }}.bash'

function_name:
  type: str
  default: 'main'

switches:
  type: yaml
  multiline: true
  default:
    - additive: true
      description: 'increase verbosity'
      dest: 'verbosity'
      flag: 'v'

opts:
  type: yaml
  multiline: true
  default:
    - additive: false
      default: '-'
      description: 'output file'
      dest: 'output_file'
      flag: 'o'
      metavar: 'OUTPUT_FILE'
      required: false

max_positional_args:
  type: int
  default: 0
  help: 'total number of positional arguments allowed; if set to -1, then there will be no upper limit enforced'

min_positional_args:
  type: int
  default: "{{ max_positional_args if max_positional_args != 0 else -1 }}"
  help: 'total number of positional arguments required; if set to -1 or 0, then there will be no lower limit enforced'

positional_args_metavars:
  type: str
  default: >-
    {%- if min_positional_args >= 0 -%}
      {%- for i in range(min_positional_args) %} ARG{%- endfor -%}
    {%- endif %}
    {%- if max_positional_args > min_positional_args -%}
      {%- for i in range(max_positional_args - ([0, min_positional_args]|max)) %} [ARG]{%- endfor -%}
    {%- elif max_positional_args < 0 %}
     [ARG]...
    {%- endif -%}
  when: '{{ max_positional_args != 0 }}'

positional_args_help:
  type: str
  multiline: true
  default: ''
  when: '{{ max_positional_args != 0 }}'

# num_opts:
#   type: int

# opts:
#   type: yaml
#   multiline: true
#   default: |
#     {% for i in range(num_opts) -%}
#     - flag: ""
#       # dest is the bash var name opt val will be stored in
#       dest: ""
#       required: false
#       additive: false
#       metavar: "VALUE"
#       default: ""
#       description: ""
#     {% endfor -%}

# opt_names:
#   type: yaml
#   default: []

# opts:
#   type: yaml
#   multiline: true
#   default: |
#     {% for opt_name in opt_names -%}
#     - flag: "{{ opt_name|first }}"
#       dest: "{{ opt_name }}"
#       required: false
#       additive: false
#       metavar: "{{ opt_name|upper }}"
#       default: ""
#       description: ""
#     {% endfor -%}

# _jinja_extensions:
#   - cookiecutter.extensions.SlugifyExtension

